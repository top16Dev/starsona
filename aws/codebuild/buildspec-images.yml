version: 0.2

env:
  variables:
    GIT_SSH_COMMAND: "ssh -i ~/.ssh/id_rsa -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"

phases:
  install:
    commands:
      - apt-get update && apt-get install -y openssh-client jq
      - mkdir -p ~/.ssh/ && chmod 700 ~/.ssh/
      - aws ssm get-parameter --name /codebuild/bitbucket/key.pem | jq -r .Parameter.Value > ~/.ssh/id_rsa
      - chmod 600 ~/.ssh/id_rsa
  pre_build:
    commands:
      - "export AWS_ACCOUNT_ID=`echo $CODEBUILD_BUILD_ARN | cut -d: -f5`"
      - export REGISTRY="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/"
      - export DEPLOYMENT_TYPE=aws
      - echo Reading parameters from SSM...
      - aws ssm get-parameter --name ${PARAMETERS} | jq -r .Parameter.Value > parameters.json
      - cat parameters.json
      - export VERSION=`cat parameters.json | jq -r .Parameters.Version`
      - export GIT_BRANCH=`cat parameters.json | jq -r .Parameters.GitBranch`
      - export BASE_IMAGE_TAG=`cat parameters.json | jq -r .Parameters.BaseImageTag`
      - export CODEBUILD_RESOLVED_SOURCE_VERSION=`cat .bitbucket/BITBUCKET_COMMIT`
      - export BITBUCKET_GIT_SSH_ORIGIN=`cat .bitbucket/BITBUCKET_GIT_SSH_ORIGIN`
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --no-include-email --region ${AWS_DEFAULT_REGION})
  build:
    commands:
      - chmod +x aws/scripts/version.sh
      - aws/scripts/version.sh "${BITBUCKET_GIT_SSH_ORIGIN}"
      - export IMAGE_TAG=:`cat .version`
      - echo Building the Docker images version${IMAGE_TAG}...
      - chmod +x docker/build-docker-images.sh
      - docker/build-docker-images.sh
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push ${REGISTRY}web-nginx-${DEPLOYMENT_TYPE}${IMAGE_TAG}
      - echo Writing artifacts...
      - aws ssm get-parameter --name /env/staging/web/web.json | jq -r .Parameter.Value | jq ".Parameters.ImageTag = \"${IMAGE_TAG}\"" > staging-web.json
      - aws ssm get-parameter --name /env/hotfix/web/web.json | jq -r .Parameter.Value | jq ".Parameters.ImageTag = \"${IMAGE_TAG}\"" > hotfix-web.json
      - aws ssm get-parameter --name /env/upgrade/web/web.json | jq -r .Parameter.Value | jq ".Parameters.ImageTag = \"${IMAGE_TAG}\"" > upgrade-web.json
      - aws ssm get-parameter --name /env/demo/web/web.json | jq -r .Parameter.Value | jq ".Parameters.ImageTag = \"${IMAGE_TAG}\"" > demo-web.json
      - aws ssm get-parameter --name /env/production/web/web.json | jq -r .Parameter.Value | jq ".Parameters.ImageTag = \"${IMAGE_TAG}\"" > production-web.json
      - cat staging-web.json hotfix-web.json upgrade-web.json production-web.json
artifacts:
  files:
    - staging-web.json
    - hotfix-web.json
    - upgrade-web.json
    - demo-web.json
    - production-web.json
  discard-paths: yes
