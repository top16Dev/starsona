version: 0.2

phases:
  install:
    commands:
    - apt-get update && apt-get install -y jq
  pre_build:
    commands:
      - "export AWS_ACCOUNT_ID=`echo $CODEBUILD_BUILD_ARN | cut -d: -f5`"
      - export REGISTRY="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/"
      - export IMAGE_TAG=:`date +%Y%m%d-%H%M%S`
      - echo BaseImageTag=$IMAGE_TAG
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --no-include-email --region ${AWS_DEFAULT_REGION})
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker images...
      - chmod +x docker/build-docker-base.sh
      - docker/build-docker-base.sh
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push ${REGISTRY}base-nginx${IMAGE_TAG}
      - docker push ${REGISTRY}base-letsencrypt${IMAGE_TAG}
      - docker push ${REGISTRY}base-node${IMAGE_TAG}
      - echo Writing artifacts...
      - aws ssm get-parameter --name /codepipeline/web/${CODEPIPELINE}.json | jq -r .Parameter.Value | jq ".Parameters.BaseImageTag = \"${IMAGE_TAG}\"" > codepipeline.json
      - cat codepipeline.json
      - echo Updating SSM...
      - aws ssm put-parameter --name /codepipeline/web/${CODEPIPELINE}.json --type String --overwrite --value file://./codepipeline.json
artifacts:
  files:
  - codepipeline.json
  discard-paths: yes
