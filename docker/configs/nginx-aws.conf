server {
  listen 80;

  #resolve using Google's DNS server to force DNS resolution and prevent caching of IPs
  resolver 8.8.8.8;

  if ($host ~* www\.(.*)) {
    set $host_without_www $1;
    rewrite ^(.*)$ http://$host_without_www$1 permanent;
  }

  set $redirect_to_https 0;
  if ($http_x_forwarded_proto != 'https') {
    set $redirect_to_https 1;
  }

  if ($request_uri = '/nginx-status') {
    set $redirect_to_https 0;
  }

  if ($redirect_to_https = 1) {
    rewrite ^ https://$host$request_uri? permanent;
  }

  location /nginx-status {
    stub_status on;
    access_log off;
  }

  set $api_url '******';
  location ~ /sitemap(.*) {
    proxy_pass $api_url$request_uri;
  }

  set $server_url '******';
  location /.well-known/apple-app-site-association {
    proxy_pass $server_url/apple-app-site-association;
  }

  root /starsona;
  index index.html;

  location / {
    try_files $uri @prerender;
    gzip_static on;
    sendfile on;
  }

  location @prerender {
    #proxy_set_header X-Prerender-Token ******;

    set $prerender 0;
    set $auth_basic Restricted;
    if ($http_user_agent ~* "googlebot|bingbot|yandex|baiduspider|twitterbot|facebookexternalhit|rogerbot|linkedinbot|embedly|quora link preview|showyoubot|outbrain|pinterest|slackbot|vkShare|W3C_Validator") {
      set $prerender 1;
      set $auth_basic off;
    }
    if ($http_user_agent ~* "TelegramBot|WhatsApp|Slackbot-LinkExpanding|Slack-ImgProxy|Slackbot|SiteAnalyzerBot") {
      set $prerender 1;
      set $auth_basic off;
    }
    # turn off staging authentication for FB in-app browser since it does not allow to enter credentials
    if ($http_user_agent ~* "FBAN|FBAV") {
      set $auth_basic off;
    }
    if ($args ~ "_escaped_fragment_") {
      set $prerender 1;
      set $auth_basic off;
    }
    if ($http_user_agent ~ "Prerender") {
      set $prerender 0;
      set $auth_basic off;
    }
    if ($uri ~* "\.(js|css|xml|less|png|jpg|jpeg|gif|pdf|doc|txt|ico|rss|zip|mp3|rar|exe|wmv|doc|avi|ppt|mpg|mpeg|tif|wav|mov|psd|ai|xls|mp4|m4a|swf|dat|dmg|iso|flv|m4v|torrent|ttf|woff|svg|eot)") {
      set $prerender 0;
      set $auth_basic off;
    }
    #auth_basic $auth_basic;
    #auth_basic_user_file /etc/nginx/.htpasswd;

    if ($prerender = 1) {
      #setting prerender as a variable forces DNS resolution since nginx caches IPs and doesnt play well with load balancing
      set $prerender "service.prerender.io";
      rewrite .* /https://$host$request_uri? break;
      proxy_pass https://$prerender;
    }
    if ($prerender = 0) {
      rewrite .* /index.html break;
    }
  }
}
